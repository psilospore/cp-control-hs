import subprocess
import re

# generated by 4o
def run_prism(model_file, properties_file, prop, const_assign=None):
    """
    Runs a PRISM model against a property and extracts the result probability.

    :param model_file: Path to the PRISM model file (.pm)
    :param properties_file: Path to the PRISM properties file (.pctl)
    :param prop: Index of the property to check (integer or string representation)
    :param const_assign: Dictionary of parameter assignments (e.g., {"p": "0.3", "q": "0.7"})
    :return: The probability result as a float.
    """
    # Construct the PRISM command
    command = ["prism", model_file, properties_file, "-prop", str(prop)]
    
    # Add parameter assignments if provided
    if const_assign:
        const_string = ",".join([f"{key}={value}" for key, value in const_assign.items()])
        command.extend(["-const", const_string])
    
    try:
        # print(command)
        # Run the PRISM command and capture the output
        result = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
        
        # Check if PRISM ran successfully
        if result.returncode != 0:
            raise RuntimeError(f"PRISM error:\n{result.stderr}")
        
        # Extract the probability from the output
        match = re.search(r"Result:\s*([\d.]+)", result.stdout)
        if match:
            prob = float(match.group(1))
            return prob
        else:
            raise ValueError("Could not find the result probability in PRISM output.")
    
    except Exception as e:
        raise RuntimeError(f"An error occurred while running PRISM: {e}")

# Example Usage
if __name__ == "__main__":
    # Define inputs
    model_file = "bin/TaxiCorrErr-CorSample2.pm"
    properties_file = "bin/TaxiPLSM.pctl"
    prop = 1
    const_assign = {"N":5}

    # Run PRISM and get the result
    try:
        probability = run_prism(model_file, properties_file, prop, const_assign)
        print(f"Extracted Probability: {probability}")
    except RuntimeError as e:
        print(str(e))


