// ALL WORST CASE STRATEGIES //
// Maximise crashing vs maximising using DC
multi(Pmax=? [ F pc=-1 ], R{"defaultControllerUsed"}max=? [C]) 


// CRASHING //
// Probability that at some point taxinet crashes and never uses DC
Pmax=? [ (F pc=-1) & (G pc!=-2)]

// Probability at some point crashing given that we never uses DC
Pmax=? [ (F pc=-1) ] / Pmax=? [ (G pc!=-2) ]

// Probability at some point crashing and never uses DC given that we never used DC
Pmax=? [ (F pc=-1) & (G pc!=-2) ] / Pmax=? [ (G pc!=-2) ]

// Probability that we crash and can use DC (should be same as that in pareto front)
Pmax=? [  (F pc=-1) ]


// USING DC //
// Probability of using DC
Pmax=? [ F pc=-2 ]

// Probability of using DC given taxinet didn't crash
Pmax=? [ F pc=-2 ] / Pmax=? [ G pc!=-1 ]

// Probability of using DC and not crashing given taxinet didn't crash
Pmax=? [ (F pc=-2) & (G pc!=-1) ] / Pmax=? [ G pc!=-1 ]


// SUCCEEDING //
// Lower bound of succeeding mission (even with using DC)
Pmin=? [ F k=N ] 

// At some point we will reach end and never use DC 
Pmin=? [ (F k=N) & (G pc>-1) ]

// Probability of success and never using DC given success
Pmin=? [ (F k=N) & (G pc!=-2) ] / Pmin=? [ (F k=N) ]

// We do not use DC until 'false' for time bound of N
Pmax=? [ pc!=-2 U<=N false ]

// Never crash or using DC till end of mission (i.e. success)
Pmin=? [ pc>-1 U k=N ] 